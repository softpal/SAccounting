@model StratusAccounting.Models.Add_Customer
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<link rel="stylesheet" type="text/css" href="~/Scripts/plugins/bootstrap-fileupload/bootstrap-fileupload.css" />

@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    <div class="page-content">
        <!-- BEGIN PAGE CONTAINER-->
        <div class="container-fluid">
            <!-- BEGIN PAGE HEADER-->
            <div class="row-fluid">
                <div class="span12">

                    <!-- BEGIN PAGE TITLE & BREADCRUMB-->
                    <!--<h3 class="page-title">Preferences</h3>-->
                    <ul class="breadcrumb margin-top-20">
                        <li><i class="icon-home"></i><a href="index.html">Home</a> <i class="icon-angle-right"></i></li>
                        <li><a href="list_customers.html">Customers</a></li>
                        <li><i class="icon-angle-right"></i><a href="add_new_customer.html">Create Customer</a></li>
                    </ul>
                    <!-- END PAGE TITLE & BREADCRUMB-->
                </div>
            </div>
            <!-- END PAGE HEADER-->
            <!-- BEGIN PAGE CONTENT-->
            <div class="row-fluid">
                <div class="span12">
                    <!-- BEGIN SAMPLE FORM PORTLET-->
                    <div class="portlet box blue border-topf">
                        <div class="portlet-body form">
                            <!-- BEGIN FORM-->
                            <!-- <h3 class="page-title matop border-btoom">create Customer <a href="#"><i class="icon-plus-sign"></i></a></h3>-->
                            @*<form class="horizontal-form" action="#">*@
                             @using (Html.BeginForm("Add_Customer", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
                             {
                                <h3 class="form-section matop">Customer Details</h3>
                                <div class="row-fluid">
                                    <div class="span6 ">
                                        <div class="control-group">
                                            <label for="firstName" class="control-label">Unique #</label>
                                            <div class="controls">
                                                @*<input type="text" class="m-wrap span12 border-form-radius" disabled="" placeholder="Auto Generated">*@
                                                @Html.TextBoxFor(model => model.UserCustomerId, new { @class = "m-wrap span12 border-form-radius", placeholder = "Auto Generated" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6 ">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Company Name</label>
                                                @Html.TextBoxFor(model => model.CompanyName, new { @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">First Name</label>
                                                @Html.TextBoxFor(model => model.CustomerFirstName, new { @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Last Name</label>
                                                @Html.TextBoxFor(model => model.CustomerLastName, new { @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Title</label>
                                                @Html.TextBoxFor(model => model.Title, new { @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">&nbsp;</label>
                                                <select class="m-wrap span12 border-form-radius">
                                                    <option value="con">Select</option>
                                                    <option value="Con 1">Profit</option>
                                                    <option value="Con 2">Non-Profit</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <h3 class="form-section matop">Communication Details</h3>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Office Email</label>
                                            @Html.TextBoxFor(model => model.Email, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.Email)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Business Phone</label>
                                            @Html.TextBoxFor(model => model.Phone, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.Phone)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Business FAX</label>
                                            @Html.TextBoxFor(model => model.Fax, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.Fax)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Country</label>
                                            @* @Html.HiddenFor(model => model.CommCountryId, new { @id = "hdnCommCountryId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="country" placeholder="Select Country" />*@
                                            @Html.HiddenFor(model => model.CommCountryId, new { @id = "hdnCommCountryId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="country" placeholder="Select Country" required />
                                            @Html.ValidationMessageFor(model => model.CommCountryId)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">State</label>
                                            @Html.HiddenFor(model => model.CommStateId, new { @id = "hdnCommStateId" })
                                            <input type="text" id="state" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" placeholder="Select State" required />
                                            @Html.ValidationMessageFor(model => model.CommStateId)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">City</label>
                                            @Html.HiddenFor(model => model.CommCityId, new { @id = "hdnCommCityId" })
                                            <input type="text" id="city" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" placeholder="Select City" required />
                                            @Html.ValidationMessageFor(model => model.CommCityId)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Street</label>
                                            @Html.TextBoxFor(model => model.CommStreet, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CommStreet)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">ZIP</label>
                                            @Html.TextBoxFor(model => model.Zip, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.Zip)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Website</label>
                                            @Html.TextBoxFor(model => model.Website, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.Website)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <h3 class="form-section matop">Bank Details</h3>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Bank name</label>
                                            @Html.TextBoxFor(model => model.BankName, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.BankName)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Account #</label>
                                            @Html.TextBoxFor(model => model.AccountNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.AccountNum)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Account type</label>
                                            @Html.DropDownListFor(model => model.BankAccountTypeId, (SelectList)ViewBag.AccountType, "--Select--", new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.BankAccountTypeId)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Routing #</label>
                                            @Html.TextBoxFor(model => model.RountingNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.RountingNum)
                                        </div>
                                    </div>
                                </div>
                            </div>
                   
                            <div class="row-fluid">

                                <div class="span12">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Bank Address</label>
                                            @Html.TextBoxFor(model => model.BankAddress, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.BankAddress)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <h3 class="form-section matop">Payment Details</h3>
                                 
                                 <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Credit Period</label>
                                            @Html.DropDownListFor(model => model.CreditPeriodTypeId, (SelectList)ViewBag.CreditPeriods, "--Select--", new { @class = "m-wrap span12 border-form-radius" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Credit Limit</label>
                                            @Html.TextBoxFor(model => model.CreditLimit, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CreditLimit)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Preferred Payment Method</label>
                                            @Html.DropDownListFor(model => model.PaymentTypesId, (SelectList)ViewBag.PaymentType, "--Select--", new { @class = "m-wrap span12 border-form-radius" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Credit Card Token ID</label>
                                            @Html.TextBoxFor(model => model.CreditCardToken, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CreditCardToken)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <h3 class="form-section matop">Billing Address</h3>   

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Country</label>
                                            @Html.HiddenFor(model => model.BillingCountryId, new { @id = "hdnbillingCountryId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="billingcountry" placeholder="Select Country" />
                                            @Html.ValidationMessageFor(model => model.BillingCountryId)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">State</label>
                                            @Html.HiddenFor(model => model.BillingStateId, new { @id = "hdnbillingStateId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="billingstate" placeholder="Select State" />
                                            @Html.ValidationMessageFor(model => model.BillingStateId)
                                        </div>
                                    </div>
                                </div>
                            </div>  

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">City</label>
                                            @Html.HiddenFor(model => model.BillingCityId, new { @id = "hdnbillingCityId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="billingcity" placeholder="Select State" />
                                            @Html.ValidationMessageFor(model => model.BillingCityId)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">

                                            <label class="control-label">Street</label>
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" id="billingStreet" />
                                            @*@Html.TextBoxFor(model => model.BillingStreet, new { @class = "m-wrap span12 border-form-radius" })*@
                                            @Html.ValidationMessageFor(model => model.BillingStreet)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">

                                            <label class="control-label">ZIP</label>
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" id="billingZip" />
                                            @*@Html.TextBoxFor(model => model.Billingzip, new { @class = "m-wrap span12 border-form-radius" })*@
                                            @Html.ValidationMessageFor(model => model.Billingzip)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <h3 class="form-section matop">Shipping Address&nbsp;
				
                                <div class="checker">
                                    <span>
                                        <input type="checkbox" value="" class="checkbox" id="shippingCheck" style="margin-bottom: 28px;" onchange="FillShippingData();">
                                    </span>
                                </div>
                                <span class="checkbox-font">Same as Billing Address
                                </span>
                            </h3> 

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">

                                            <label class="control-label">Country</label>
                                            @Html.HiddenFor(model => model.ShippingCountryId, new { @id = "hdnshippingCountryId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="shippingcountry" placeholder="Select Country" />
                                            @Html.ValidationMessageFor(model => model.ShippingCountryId)
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">State</label>
                                            @Html.HiddenFor(model => model.ShippingStateId, new { @id = "hdnshippingStateId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="shippingstate" placeholder="Select State" />
                                            @Html.ValidationMessageFor(model => model.ShippingStateId)

                                        </div>
                                    </div>
                                </div>
                            </div>  

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">City</label>
                                            @Html.HiddenFor(model => model.ShippingCityId, new { @id = "hdnshippingCityId" })
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" pattern="^[a-zA-Z''-'\s]{1,40}$" id="shippingcity" placeholder="Select State" />
                                            @Html.ValidationMessageFor(model => model.ShippingCityId)

                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Street</label>
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" id="shippingStreet" />
                                            @*@Html.TextBoxFor(model => model.ShippingStreet, new { @class = "m-wrap span12 border-form-radius" })*@
                                            @Html.ValidationMessageFor(model => model.ShippingStreet)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">ZIP</label>
                                            <input type="text" title="" class="m-wrap span12 border-form-radius" id="shippingZip" />
                                            @*@Html.TextBoxFor(model => model.ShippingZip, new { @class = "m-wrap span12 border-form-radius" })*@
                                            @Html.ValidationMessageFor(model => model.ShippingZip)
                                        </div>
                                    </div>
                                </div>

                            </div>
                                 
                                <h3 class="form-section matop">Tax Details</h3>
                                @*<div id="taxParentDiv">
                                    @Html.EditorFor(model => model.TaxDetails, "~/Views/Shared/EditorTemplates/UMst_TaxDetails.cshtml")
                                </div>*@
                                <div class="row-fluid">
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Federal Tax ID</label>
                                            @Html.TextBoxFor(model => model.FederalTaxNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.FederalTaxNum)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Federal Tax %</label>
                                            @Html.TextBoxFor(model => model.FederalTaxValue, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.FederalTaxValue)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">City Tax ID</label>
                                            @Html.TextBoxFor(model => model.CityTaxNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CityTaxNum)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">City Tax %</label>
                                            @Html.TextBoxFor(model => model.CityTaxValue, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CityTaxValue)
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="row-fluid">
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">State Tax ID</label>
                                            @Html.TextBoxFor(model => model.StateTaxNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.StateTaxNum)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">State Tax %</label>
                                            @Html.TextBoxFor(model => model.StateTaxValue, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.StateTaxValue)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Country Tax ID</label>
                                            @Html.TextBoxFor(model => model.CountyTaxNum, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CountyTaxNum)
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="control-label">Country Tax %</label>
                                            @Html.TextBoxFor(model => model.CountyTaxValue, new { @class = "m-wrap span12 border-form-radius" })
                                            @Html.ValidationMessageFor(model => model.CountyTaxValue)
                                        </div>
                                    </div>
                                </div>
                                <div class="span12 no-left-margin">
                                    <div class="control-group">
                                        <div class="controls">
                                            <label class="radio">
                                                <div class="radio">
                                                    <span>
                                                        <input type="radio" name="optionsRadios1" value="option1"></span>
                                                </div>
                                                Taxable 
										
                                            </label>
                                            <label class="radio">
                                                <div class="radio">
                                                    <span class="checked">
                                                        <input type="radio" name="optionsRadios1" value="option2" checked=""></span>
                                                </div>
                                                Non Taxable 
										
                                            </label>

                                        </div>
                                    </div>
                                </div>

                            </div>
                                @*<div class="row-fluid">
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Federal Tax ID</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Federal Tax %</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">City Tax ID</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">City Tax %</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row-fluid">
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">State Tax ID</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">State Tax %</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">County Tax ID</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">County Tax %</label>
                                                <input type="text" class="m-wrap span12 border-form-radius">
                                            </div>
                                        </div>
                                    </div>*@

                                @*@Html.RadioButtonFor(model => model.UserCustomer.IsTaxable, true, new { @class = "type-radio" }) <span>Taxable</span>
                                @Html.RadioButtonFor(model => model.UserCustomer.IsTaxable, false, new { @class = "type-radio" })<span>Non Taxable</span>*@



                                @*<h3 class="form-section matop">Documents</h3>*@
                                <div class="row-fluid margin-bottom-10">
                                <div class="span6">
                                    <div class="control-group">
                                        <div class="controls">
                                            @Html.Partial("~/Views/Shared/EditorTemplates/FileUpload.cshtml")
                                        </div>
                                    </div>
                                    </div>
                            </div>

                                @*<div class="row-fluid">
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <div class="fileupload fileupload-new" data-provides="fileupload">
                                                    <div class="input-append">*@
                                                        @*<div class="uneditable-input"><i class="icon-file fileupload-exists"></i><span class="fileupload-preview"></span></div>
                                                        <span class="btn btn-file"><span class="fileupload-new">Upload</span> <span class="fileupload-exists">Change</span>
                                                            <input type="file" class="default">
                                                        </span>*@
                                                        @*<ol>
                                                            <li class="lifile">
                                                                <input type="file" id="fileToUpload" name="file" />
                                                                <span class="field-validation-error" id="spanfile"></span>
                                                            </li>
                                                        </ol>*@
                                                        @*<input type="submit" id="btnSubmit" value="Upload" />*@

                                                   @* </div>
                                                </div>
                                                <div>@Html.ActionLink("Upload", "FileUploading", "Customer", new { FormMethod.Post, enctype = "multipart/form-data" }) </div>
                                            </div>
                                            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                                <tbody>
                                                    <tr>
                                                        <td width="85%" valign="middle"><a href="#">one.pdf</a></td>
                                                        <td width="15%" align="center"><i class="icon-remove-circle f24"></i></td>
                                                    </tr>
                                                    <tr>
                                                        <td width="85%" valign="middle"><a href="#">excel.xls</a></td>
                                                        <td width="15%" align="center"><i class="icon-remove-circle f24"></i></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>*@

                                <div class="form-actions ">
                                    <button class="btn blue" type="submit"><i class="icon-plus-sign"></i>Add</button>
                                    <button class="btn" type="button">Cancel</button>
                                </div>
                            @*</form>*@
                             }
                            <!-- END FORM-->
                        </div>
                    </div>
                    <!-- END SAMPLE FORM PORTLET-->
                </div>
            </div>

            <!-- END PAGE CONTENT-->
        </div>
        <!-- END PAGE CONTAINER-->
    </div>

    @Scripts.Render("~/bundle/Script/Dashboard")
}

<script src="~/Scripts/scripts/app.js"></script>
<script src="~/Scripts/scripts/table-advanced.js"></script>
<script src="~/Scripts/scripts/form-components.js"></script>
<script type="text/javascript">
    function SaveTaxInformation() {
        var countChild = $('#taxParentDiv').find('input').length / 3;//$("#taxParentDiv")[0].childNodes.length;
        var TaxDetails = new Array(countChild);
        var i = 0;
        var taxNum;
        var taxValue;
        $('#taxParentDiv').find('input').each(function (index, element) {
            if (element.id.indexOf("hdn") >= 0) {
                TaxDetails[i] = new Array(3);
                TaxDetails[i][0] = element.value;
            }
            else if (element.id.indexOf("TaxNum") >= 0) {
                TaxDetails[i][1] = element.value;
            }
            else if (element.id.indexOf("TaxValue") >= 0) {
                TaxDetails[i][2] = element.value;
                i++;
            }
        });

        $.ajax({
            url: '/Customer/SaveTaxInformation/',
            type: "Post",
            contentType: "application/json",
            data: JSON.stringify({ "TaxDetails": TaxDetails }),
            success: function (data) {
                //debugger;  //var result = msg.data;
                if (data) {
                    alert("Saved successfully");
                }
            },
            error: function (error) {
                //debugger;
                alert(error);
            }
        });

    }
</script>


var url = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "CountriesApi", action = "GetCountries" })';
    $("#country").autocomplete({
        source: function (request, response) {
            //debugger;
            $.ajax({
                url: url,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //debugger;
                    response($.map(data, function (item) {
                        return {
                            label: item.CountryName,
                            value: item.CountryId
                        };
                    }));
                },
                error: function (data) {
                    // debugger;
                }
            });
        },
        focus: function (event, ui) {
            //debugger;
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            //debugger;
            $('#country').val(ui.item.label);
            $('#hdnCommCountryId').val(ui.item.value);

            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function (data) { //debugger; 
            }
        }
    });

    $("#billingcountry").autocomplete({
        source: function (request, response) {
            //debugger;
            $.ajax({
                url: url,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //debugger;
                    response($.map(data, function (item) {
                        return {
                            label: item.CountryName,
                            value: item.CountryId
                        };
                    }));
                },
                error: function (data) {
                    // debugger;
                }
            });
        },
        focus: function (event, ui) {
            //debugger;
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            //debugger;
            $('#billingcountry').val(ui.item.label);
            $('#hdnbillingCountryId').val(ui.item.value);

            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function (data) { //debugger; 
            }
        }
    });

    $("#shippingcountry").autocomplete({
        source: function (request, response) {
            //debugger;
            $.ajax({
                url: url,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //debugger;
                    response($.map(data, function (item) {
                        return {
                            label: item.CountryName,
                            value: item.CountryId
                        };
                    }));
                },
                error: function (data) {
                    // debugger;
                }
            });
        },
        focus: function (event, ui) {
            //debugger;
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            //debugger;
            $('#shippingcountry').val(ui.item.label);
            $('#hdnshippingCountryId').val(ui.item.value);

            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function (data) { //debugger; 
            }
        }
    });

    var stateapi = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "CountriesApi", action = "GetStates" })';
    //debugger;
    $('#state').autocomplete({
        source: function (request, response) {
            //debugger;
            var countryId = $("#hdnCommCountryId").val();
            //debugger;
            if (countryId > 0) {
                $.ajax({
                    url: stateapi,
                    data: { country: countryId, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.StateName,
                                value: item.StateId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#state').val(ui.item.label);
            $('#hdnCommStateId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    $('#billingstate').autocomplete({
        source: function (request, response) {
            //debugger;
            var countryId = $("#hdnbillingCountryId").val();
            //debugger;
            if (countryId > 0) {
                $.ajax({
                    url: stateapi,
                    data: { country: countryId, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.StateName,
                                value: item.StateId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#billingstate').val(ui.item.label);
            $('#hdnbillingStateId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    $('#shippingstate').autocomplete({
        source: function (request, response) {
            //debugger;
            var countryId = $("#hdnshippingCountryId").val();
            //debugger;
            if (countryId > 0) {
                $.ajax({
                    url: stateapi,
                    data: { country: countryId, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.StateName,
                                value: item.StateId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#shippingstate').val(ui.item.label);
            $('#hdnshippingStateId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    var cityapi = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "CountriesApi", action = "GetCity" })';
    //debugger;
    $('#city').autocomplete({
        source: function (request, response) {
            //debugger;
            var stateID = $("#hdnCommStateId").val();
            //debugger;
            if (stateID > 0) {
                $.ajax({
                    url: cityapi,
                    data: { state: stateID, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.CityName,
                                value: item.CityId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#city').val(ui.item.label);
            $('#hdnCommCityId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    $('#billingcity').autocomplete({
        source: function (request, response) {
            //debugger;
            var stateID = $("#hdnbillingStateId").val();
            //debugger;
            if (stateID > 0) {
                $.ajax({
                    url: cityapi,
                    data: { state: stateID, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.CityName,
                                value: item.CityId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#billingcity').val(ui.item.label);
            $('#hdnbillingCityId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    $('#shippingcity').autocomplete({
        source: function (request, response) {
            //debugger;
            var stateID = $("#hdnshippingStateId").val();
            //debugger;
            if (stateID > 0) {
                $.ajax({
                    url: cityapi,
                    data: { state: stateID, query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.CityName,
                                value: item.CityId
                            };
                        }));
                    }
                });
            }
        },
        focus: function (event, ui) {
            this.value = ui.item.label;
            $(".ui-helper-hidden-accessible").css("display", "none");
            event.preventDefault(); // Prevent the default focus behavior.
        },
        select: function (event, ui) {
            $('#shippingcity').val(ui.item.label);
            $('#hdnshippingCityId').val(ui.item.value);
            return false;
        },
        minLength: 1,
        messages: {
            noResults: '',
            results: function () { }
        }
    });

    $(document).ready(
        function () {
            $("#btnUserInfo").click(

                function () {
                    //debugger;
                    $("#form").validate();
                    if ($("#form").valid()) {
                        $("#userInfo")[0].style.display = 'none';
                        $("#businessInfo")[0].style.display = 'block';
                    }
                }
                );
            $("#btnBusinessInfo").click(
                function () {
                    //debugger;
                    $("#form").validate();
                    if ($("#form").valid()) {
                        $("#businessInfo")[0].style.display = 'none';
                        $("#process")[0].style.display = "block";
                    }
                }
                );

            $("#btnPrcBack").click(
                function () {
                    $("#businessInfo")[0].style.display = 'block';
                    $("#process")[0].style.display = "none";
                }
                );

            $("#btnBusInfoBack").click(
                function () {
                    $("#userInfo")[0].style.display = 'block';
                    $("#businessInfo")[0].style.display = 'none';
                }
                );
        }
        );
</script>
@Scripts.Render("~/bundle/Script/Dashboard")