@model StratusAccounting.Models.SalesReceipt
@{
    ViewBag.Title = "AddInvoiceSalesReceipts";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h2>AddInvoiceSalesReceipts</h2>
<link href="~/Scripts/plugins/bootstrap-fileupload/bootstrap-fileupload.css" rel="stylesheet" />
@Scripts.Render("~/bundle/Script/Dashboard")
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    @Html.HiddenFor(model => model.BusinessId)
    @Html.HiddenFor(model => model.CreatedByUserId)

    <div class="page-content">
        <!-- BEGIN PAGE CONTAINER-->
        <div class="container-fluid">
            <!-- BEGIN PAGE HEADER-->
            <div class="row-fluid">
                <div class="span12">

                    <!-- BEGIN PAGE TITLE & BREADCRUMB-->
                    <!--<h3 class="page-title">Preferences</h3>-->
                    <ul class="breadcrumb margin-top-20">
                        <li><i class="icon-home"></i><a href="index.html">Home</a> <i class="icon-angle-right"></i></li>
                        <li><a href="chart_of_accounts.html">Transactions</a></li>
                        <li><a href="invoice.html"><i class="icon-angle-right"></i>Invoices</a></li>
                        <li><a href="invoice_sales_receipts.html"><i class="icon-angle-right"></i>Sales Revenues</a></li>
                    </ul>
                    <!-- END PAGE TITLE & BREADCRUMB-->
                </div>
            </div>
            <!-- END PAGE HEADER-->
            <!-- BEGIN PAGE CONTENT-->
            <div class="row-fluid">
                <div class="span12">
                    <!-- BEGIN SAMPLE FORM PORTLET-->
                    <div class="portlet box blue border-topf">
                        <div class="portlet-body form">
                            <!-- BEGIN FORM-->
                            <!-- <h3 class="page-title matop border-btoom">create Customer <a href="#"><i class="icon-plus-sign"></i></a></h3>-->
                            <form class="horizontal-form" action="#">
                                <h3 class="form-section matop">New Sales Receipt</h3>
                                <div class="row-fluid">
                                    <div class="span12">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Bank Name</label>
                                                @* @Html.DropDownListFor(model => model.BankAccountId, (SelectList)ViewBag.GetBankAccounts, "--Select--", new { @id = "ddlBanks", @class = "m-wrap span12 border-form-radius" })*@
                                                @Html.HiddenFor(model => model.BankAccountsId, new { @id = "hdnBankAccountId" })
                                                @Html.TextBoxFor(model => model.AccountName, new { @id = "txtBankAccounts", @class = "m-wrap span12 date-picker border-form-radius" })
                                            </div>
                                        </div>
                                    </div>

                                </div>


                                <div class="row-fluid">
                                    <div class="span6 ">
                                        <div class="control-group">
                                            <label for="firstName" class="control-label">Recipt #</label>
                                            <div class="controls">
                                                @Html.HiddenFor(model => model.SalesReceiptId, new { @id = "hdnSalesReceiptId" })

                                                @Html.TextBoxFor(model => model.ReceiptNum, new { @id = "txtSalreceipts", @class = "m-wrap span12 date-picker border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6 ">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">
                                                    Payment Method
                                                </label>
                                                @Html.DropDownListFor(model => model.PaymentTypesId, (SelectList)ViewBag.GetInstrumentTypes, "--Select--", new { @id = "ddlInstruments", @class = "m-wrap span12 border-form-radius" })


                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Date</label>
                                                @* @Html.HiddenFor(model => model.Date)*@
                                                <input class="m-wrap span12 date-picker border-form-radius" size="16" type="text" id="txtSaleRecDate" name="txtSaleRecDate" value="" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Customer</label>
                                                @Html.HiddenFor(model => model.UserCustomerId)
                                                <input type="text" class="m-wrap span12 border-form-radius" id="txtCustomer" name="txtCustomer" autocomplete="off">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Amount</label>
                                                @Html.TextBoxFor(model => model.Amount, new { @id = "txtAmount", @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="control-group">
                                            <div class="controls">
                                                <label class="control-label">Description</label>
                                                @Html.TextBoxFor(model => model.Description, new { @id = "txtDescription", @class = "m-wrap span12 border-form-radius" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-actions ">
                                    <button class="btn blue" type="submit" id="btnSubmit"><i class="icon-plus-sign"></i>Add</button>
                                    <button class="btn" type="button">Cancel</button>
                                </div>
                            </form>
                            <!-- END FORM-->
                        </div>
                    </div>
                    <!-- END SAMPLE FORM PORTLET-->
                </div>
            </div>

            <!-- END PAGE CONTENT-->
        </div>
        <!-- END PAGE CONTAINER-->
    </div>
}
<script src="~/Scripts/scripts/app.js"></script>
<script src="~/Scripts/scripts/table-advanced.js"></script>

<script src="~/Scripts/scripts/form-components.js"></script>

<script type="text/javascript">
    $(document).ready(
        function () {
            $("#txtSaleRecDate").datepicker();
        });
    $("#btnSubmit").click(function () {

        var txtSaleRecDate = $('#txtSaleRecDate').val();
        var txtAmount = $('#txtAmount').val();
        var txtDescription = $('#txtDescription').val();
        try {

            if (txtSaleRecDate.toString().trim() != '') {
                //  $('#Date').val(txtPaymentDate);
            }
            else {
                $('#txtSaleRecDate').focus();
                return false;
            }


            if (txtAmount.toString().trim() != '') {
            }
            else {
                $('#txtAmount').focus();
                return false;
            }

            if (txtDescription.toString().trim() != '') {
            }
            else {
                $('#txtDescription').focus();
                return false;
            }



        }
        catch (e) {
            return false;
        }


    });


</script>


<script>
    $(function () {
        $('#txtBankAccounts').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetPaymentBankAccounts")',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        keyword: $("#txtBankAccounts").val()
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.BankName,
                                value: item.BankAccountsId
                            };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            },
            select: function (event, ui) {
                $('#txtBankAccounts').val(ui.item.label);
                $('#hdnBankAccountId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        $('#txtSalreceipts').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetReceipts")',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        keyword: $("#txtSalreceipts").val()
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.ReceiptNum,
                                value: item.SNo
                            };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            },
            select: function (event, ui) {
                $('#txtSalreceipts').val(ui.item.label);
                $('#hdnSalesReceiptId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        $('#txtCustomer').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSalesReceiptsCustomers")',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        keyword: $("#txtCustomer").val()
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.CompanyName,
                                value: item.UserCustomerId
                            };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            },
            select: function (event, ui) {
                $('#txtCustomer').val(ui.item.label);
                $('#UserCustomerId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });
    });
</script>
